#+TITLE: Emacs org configuration file
#+AUTHOR: Carlos Perez

* General
Adapted from [[https://github.com/mwfogleman/.emacs.d/blob/master/michael.org][mwfogleman/.emacs.d · GitHub]]
The theming is derived from [[https://lepisma.github.io/2017/10/28/ricing-org-mode/][Ricing up Org Mode]]
Use this also as a reference for fonts: [[https://zzamboni.org/post/beautifying-org-mode-in-emacs/][Beautifying Org Mode in Emacs]]
#+BEGIN_SRC emacs-lisp :results silent
  (use-package org
    :ensure t
    :bind (("C-c l" . org-store-link)
           ("C-c c" . org-capture)
           ("C-M-|" . indent-rigidly)
           ("C-c b" . org-iswitchb)
           ("C-c a" . org-agenda))

    :custom-face
    (variable-pitch ((t (:family "ETBembo" :height 1.1))))
    (fixed-pitch ((t ( :family "UbuntuMono" :slant normal :weight normal :height 0.9 :width normal))))
    (org-document-title ((t (:foreground "#171717" :weight bold :height 1.6))))
    (org-done ((t (:background "#E8E8E8" :foreground "#0E0E0E" :strike-through t :weight bold))))
    (org-headline-done ((t (:foreground "#171717" :strike-through t))))
    (org-level-1 ((t (:foreground "#090909" :weight bold :height 1.4))))
    (org-level-2 ((t (:foreground "#090909" :weight normal :height 1.3))))
    (org-level-3 ((t (:foreground "#090909" :weight normal :height 1.2))))
    (org-image-actual-width '(600))

    :init
    (setq default-major-mode 'org-mode
          org-directory "~/org/"
          org-log-done t
          org-startup-indented nil
          org-startup-truncated nil
          org-startup-with-inline-images t
          org-completion-use-ido t
          org-default-notes-file (concat org-directory "notes.org")
          org-image-actual-width '(300)
          org-goto-max-level 10
          org-imenu-depth 5
          org-goto-interface 'outline-path-completion
          org-outline-path-complete-in-steps nil
          org-src-fontify-natively t
          org-lowest-priority ?C
          org-default-priority ?B
          org-expiry-inactive-timestamps t
          org-show-notification-handler 'message
          org-special-ctrl-a/e t
          org-special-ctrl-k t
          org-yank-adjusted-subtrees t
          ;; Theming
          org-ellipsis "  " ;; folding symbol
          org-pretty-entities t
          org-hide-emphasis-markers t ;; show actually italicized text instead of /italicized text/
          org-agenda-block-separator ""
          org-fontify-whole-heading-line t
          org-fontify-done-headline t
          org-fontify-quote-and-verse-blocks t) 
    
    (add-hook 'org-mode-hook
              '(lambda ()
                 ;; (setq line-spacing 0.2) ;; Add more line padding for readability
                 (variable-pitch-mode 1) ;; All fonts with variable pitch.
                 (mapc
                  (lambda (face) ;; Other fonts with fixed-pitch.
                    (set-face-attribute face nil :inherit 'fixed-pitch))
                  (list 'org-code
                        'org-link
                        'org-block
                        'org-table
                        'org-verbatim
                        'org-block-begin-line
                        'org-block-end-line
                        'org-meta-line
                        'org-document-info-keyword))))
    (custom-set-faces
     '(org-block-begin-line
       ((t (:underline "#A7A6AA" :foreground "#008ED1" :background "#EAEAFF"))))
     '(org-block-end-line
       ((t (:overline "#A7A6AA" :foreground "#008ED1" :background "#EAEAFF")))))
    )
#+END_SRC

* Org bullets
End
#+BEGIN_SRC emacs-lisp
(use-package org-bullets
  :ensure t
  :init
  (add-hook 'org-mode-hook (lambda () (org-bullets-mode 1))))
#+END_SRC

* Timer
#+BEGIN_SRC emacs-lisp :results silent
;;(setq org-clock-sound nil) ;; no sound
(setq org-clock-sound t) ;; Standard Emacs beep

#+END_SRC

* Org-cliplink
A simple command that takes a URL from the clipboard and inserts an org-mode
link with a title of a page found by the URL into the current buffer.

[[https://github.com/rexim/org-cliplink][GitHub - rexim/org-cliplink: Insert org-mode links from clipboard]]

#+BEGIN_SRC emacs-lisp :results silent
(use-package org-cliplink
  :ensure t
  :config
  (global-set-key (kbd "C-x p i") 'org-cliplink)
  )
#+END_SRC

* Org download
Drag and drop images to Emacs org-mode
[[https://github.com/abo-abo/org-download][GitHub - abo-abo/org-download: Drag and drop images to Emacs org-mode]]

#+BEGIN_SRC emacs-lisp
(use-package org-download
  :ensure t)
#+END_SRC

* Properties
To make quicknotes inside a logbook drawer
#+BEGIN_SRC emacs-lisp
(setq org-log-into-drawer t)
#+END_SRC

Create templates for properties

#+BEGIN_SRC emacs-lisp :results silent
(add-to-list 'org-structure-template-alist
             (list "pp" (concat
                         ":PROPERTIES:\n"
                         ":State: ?\n"
                         ":END:"
)))


#+END_SRC

* Agenda
** Custom views
The entries in the list giving the custom command are:

- A shortcut key using after C-c a to access the agenda.
- A description.
- The type of agenda (agenda in this case).  agenda, todo and tags are the most
  useful types.
- For tags and todo types this is the tags or todo items to search for. For the
  agenda type it should be an empty string.
- A list of pairs (variable value) giving various settings to customize the
  agenda.

#+BEGIN_SRC emacs-lisp :results silent
(setq org-agenda-custom-commands
      '(("S" "Someday"
        todo "SOMEDAY"
        )

      ("i" "Urgent and calls"
       ((todo "TODO")
        (tags "PHONE")))))

#+END_SRC

* Goals
Create a template for SMART goals

* Refile
Change org refile targets to be context dependent
#+BEGIN_SRC emacs-lisp :results silent
(defun my/org-refile-in-file (&optional prefix)
  "Refile to a target within the current file."
  (interactive)
  (let ((org-refile-targets `(((,(buffer-file-name)) :maxlevel . 6))))
    (call-interactively 'org-refile)))
#+END_SRC

* Clocking
Keep clock times into a clocking drawer

#+BEGIN_SRC emacs-lisp :results silent
(setq org-clock-into-drawer "CLOCKING")
#+END_SRC

End.
